"use strict";
const descriptors_1 = require("./descriptors");
function overrideWrapper(target, values = {}) {
    return new Proxy(target, {
        get(target, property) {
            if (property in values) {
                return values[property];
            }
            return target[property];
        },
        set(target, property, value) {
            if (property in values) {
                values[property] = value;
            }
            else {
                target[property] = value;
            }
            return true;
        }
    });
}
exports.overrideWrapper = overrideWrapper;
function descriptorWrapper(target, descriptors = {}) {
    return new Proxy(target, {
        get(target, property) {
            if (descriptors_1.isGetPropertyDescriptor(descriptors[property])) {
                return descriptors[property].get();
            }
            else if (descriptors_1.isDataDescriptor(descriptors[property])) {
                return descriptors[property].value;
            }
            return target[property];
        },
        getOwnPropertyDescriptor(target, property) {
            if (descriptors_1.isPropertyDescriptor(descriptors[property])) {
                return descriptors[property];
            }
            return target.getOwnPropertyDescriptor(property);
        },
        set(target, property, value) {
            if (descriptors_1.isSetPropertyDescriptor(descriptors[property])) {
                descriptors[property].set(value);
            }
            else if (descriptors_1.isDataDescriptor(descriptors[property])) {
                descriptors[property].value = value;
            }
            else {
                target[property] = value;
            }
            return true;
        }
    });
}
exports.descriptorWrapper = descriptorWrapper;
//# sourceMappingURL=proxies.js.map