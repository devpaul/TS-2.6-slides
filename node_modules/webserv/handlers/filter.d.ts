/// <reference types="node" />
import { HandlerFunction, Handler } from './Handler';
import { IncomingMessage } from 'http';
export interface FilterFunction {
    (request: IncomingMessage): boolean;
}
export declare type Partial<T> = {
    [P in keyof T]?: T[P];
};
export declare type FilterObject = Partial<IncomingMessage>;
export declare type Filter = string | RegExp | FilterFunction | FilterObject;
/**
 * Apply a filter that will execute the handler if the supplied filter matches. If a string
 * or a RegExp are supplied they will be compared against the incoming URL. A filter function is
 * passed the incoming request allowing for more complex filtering.
 *
 * @param handler the handler to be executed
 * @param filter the filter that must pass for the handler to be executed
 */
export declare function filter(handler: HandlerFunction, filter: Filter): HandlerFunction;
/**
 * Wrap a Handler in a Proxy that filters #handle()
 *
 * @param handler the Handler to be proxied
 * @param f the filter that must pass for the handler to be executed
 * @return {Handler} a proxied version of the handler
 */
export declare function proxy(handler: Handler, f: Filter): Handler;
/**
 * Create a filter that matches on the request's http method
 *
 * @param method the http method to match
 */
export declare function method(method: string): FilterFunction;
/**
 * This is an OR operator for filters. It combines a list of filters together into a single filter function so
 * the first condition that passes will pass the entire filter
 *
 * @param filters a series of filters to be combined
 */
export declare function first(...filters: Filter[]): FilterFunction;
/**
 * This is an AND operator for filters. It combines a list of filters together into a single filter function and
 * requires that all conditions pass to pass the filter
 *
 * @param filters a series of filters to be combined
 */
export declare function every(...filters: Filter[]): FilterFunction;
/**
 * Create a filter function from any of the valid filter types
 */
export declare function createFilter(filter: Filter): FilterFunction;
