/// <reference types="node" />
import { Handler, HandlerFunction } from './Handler';
import { IncomingMessage } from 'http';
export interface Transform {
    (request: IncomingMessage): IncomingMessage;
}
/**
 * Transform the incoming request to include additional
 *
 * @param handler the handler to receive transformed data
 * @param transform the transform to apply to the request
 * @return {(request:IncomingMessage, response:ServerResponse)=>Promise<Response>} a transform function
 */
export declare function transform(handler: HandlerFunction, transform: Transform): HandlerFunction;
/**
 * Wrap a proxy around a handler that transforms data to the handler
 *
 * @param handler the Handler to be proxied
 * @param transformFunc the transform method that transforms the request
 * @return {Handler} a proxied version of the Handler
 */
export declare function proxy(handler: Handler, transformFunc: Transform): Handler;
export declare function relativeUrl(match: string, replace?: string): Transform;
