"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments)).next());
    });
};
const Handler_1 = require("./Handler");
const Functional_1 = require("./Functional");
class Group {
    constructor(handlers = []) {
        this.handlers = [];
        this.add(handlers);
    }
    add(handler) {
        if (Array.isArray(handler)) {
            handler.forEach(this.add.bind(this));
        }
        else if (Handler_1.isHandlerFunction(handler)) {
            this.handlers.push(new Functional_1.default(handler));
        }
        else if (Handler_1.isHandler(handler)) {
            this.handlers.push(handler);
        }
        else {
            throw new Error('Unrecognized type');
        }
        return this;
    }
    handle(request, response) {
        return this.processHandlers(request, response)
            .then(function (result) {
            // Filter all but the immediate return directive; if we didn't then 'skip' would be passed out
            // potentially to a parent Group
            if (result === 'immediate') {
                return 'immediate';
            }
        });
    }
    processHandlers(request, response) {
        return __awaiter(this, void 0, void 0, function* () {
            for (let count = 0; count < this.handlers.length; count++) {
                const result = yield this.handlers[count].handle(request, response);
                if (result === 'skip' || result === 'immediate') {
                    return result;
                }
            }
        });
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = Group;
//# sourceMappingURL=Group.js.map