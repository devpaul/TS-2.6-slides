"use strict";
const Handler_1 = require("./Handler");
const Functional_1 = require("./Functional");
const filter_1 = require("./filter");
const transform_1 = require("./transform");
const Group_1 = require("./Group");
class Route {
    constructor() {
        this.stack = [];
    }
    filter(filter) {
        this.stack.unshift(function (handler) {
            return filter_1.proxy(handler, filter);
        });
        return this;
    }
    transform(func) {
        this.stack.unshift(function (handler) {
            return transform_1.proxy(handler, func);
        });
        return this;
    }
    wrap(handler) {
        if (Array.isArray(handler)) {
            handler = new Group_1.default(handler);
        }
        else if (Handler_1.isHandlerFunction(handler)) {
            handler = new Functional_1.default(handler);
        }
        for (let factory of this.stack) {
            handler = factory(handler);
        }
        return handler;
    }
}
exports.Route = Route;
function route(filter) {
    const route = new Route();
    if (filter) {
        route.filter(filter);
    }
    return route;
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = route;
//# sourceMappingURL=route.js.map