"use strict";
const log_1 = require("../log");
const httpProxy = require('http-proxy');
class WebProxy {
    constructor(baseUrl) {
        this.baseUrl = baseUrl;
    }
    onClose() {
        log_1.log.debug('closed proxy');
    }
    onError(err) {
        log_1.log.error(`Proxy failed: ${err.message}`);
    }
    handle(request, response) {
        if (response.finished) {
            return Promise.resolve();
        }
        return new Promise((resolve) => {
            if (response.finished) {
                resolve();
                return;
            }
            const proxy = httpProxy.createProxyServer({});
            proxy.on('error', (err) => {
                this.onError(err);
                resolve();
            });
            response.on('close', () => {
                this.onClose();
                resolve();
            });
            proxy.on('proxyRes', (proxyResponse, request, response) => {
                if (this.onProxyResponse) {
                    this.onProxyResponse(proxyResponse, request, response);
                }
            });
            proxy.on('proxyReq', (proxyRequest, request, response) => {
                if (this.onProxyRequest) {
                    this.onProxyRequest(proxyRequest, request, response);
                }
            });
            log_1.log.debug(`proxying to ${this.baseUrl}${request.url}`);
            proxy.web(request, response, {
                changeOrigin: true,
                target: this.baseUrl
            });
        });
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = WebProxy;
//# sourceMappingURL=WebProxy.js.map