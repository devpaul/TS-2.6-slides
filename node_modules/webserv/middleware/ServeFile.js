"use strict";
const fs_1 = require("fs");
const url_1 = require("url");
const path_1 = require("path");
const log_1 = require("../log");
const send = require('send');
class ServeFile {
    constructor(rootDirectory = process.cwd(), searchDefaults = ['index.html']) {
        this.rootDirectory = rootDirectory;
        this.searchDefaults = searchDefaults;
    }
    handle(request, response) {
        if (response.finished) {
            return Promise.resolve();
        }
        return new Promise((resolve) => {
            const requestUrl = url_1.parse(request.url);
            const path = path_1.join(this.rootDirectory, requestUrl.pathname);
            const location = this.mapToLocalFile(path, true);
            if (location) {
                log_1.log.debug(`ServeFile: serving file "${location}"`);
                send(request, location)
                    .on('end', function () {
                    response.end();
                    resolve('immediate');
                })
                    .pipe(response);
            }
            else {
                log_1.log.debug(`ServeFile: "${location} does not exist`);
                resolve();
            }
        });
    }
    mapToLocalFile(location, handleDirectories = false) {
        try {
            const stats = fs_1.statSync(location);
            if (handleDirectories && stats.isDirectory()) {
                return this.directoryHandler(location);
            }
            return location;
        }
        catch (e) {
        }
        return null;
    }
    directoryHandler(directory) {
        for (let i = 0; i < this.searchDefaults.length; i++) {
            const filename = this.searchDefaults[i];
            const location = this.mapToLocalFile(path_1.join(directory, filename));
            if (location) {
                return location;
            }
        }
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ServeFile;
//# sourceMappingURL=ServeFile.js.map