/// <reference types="node" />
import { Handler, Response as HandlerResponse } from '../handlers/Handler';
import { IncomingMessage, ServerResponse } from 'http';
export interface Headers {
    [key: string]: string;
}
export default class SetHeaders implements Handler {
    headers: Headers;
    constructor(header: Headers);
    constructor(header: string, value: string);
    handle(_request: IncomingMessage, response: ServerResponse): Promise<HandlerResponse>;
}
export declare type CacheMethods = 'must-revalidate' | 'no-cache' | 'no-store' | 'no-transform' | 'public' | 'private' | 'proxy-revalidate' | string;
export declare function noCache(cacheMethod?: CacheMethods): SetHeaders;
export declare function corsSupport(origin?: string): SetHeaders;
