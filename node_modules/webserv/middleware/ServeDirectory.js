"use strict";
const fs_1 = require("fs");
const url_1 = require("url");
const path_1 = require("path");
const log_1 = require("../log");
class ServeDirectory {
    constructor(options = {}) {
        this.basePath = '';
        if (typeof options === 'string') {
            this.rootDirectory = options;
        }
        else {
            this.rootDirectory = options.rootDirectory || process.cwd();
            this.basePath = options.basePath || '';
        }
    }
    createHtml(currentDirectory, files) {
        const fileLinks = () => {
            return files.map((file) => {
                return `<a href="${path_1.join(this.basePath, currentDirectory, file)}">${file}</a>`;
            }).join('<br>');
        };
        return '<!DOCTYPE html>' +
            '<html lang="en">' +
            '<head>' +
            '	<meta charset="UTF-8">' +
            '	<title>Title</title>' +
            '</head>' +
            '<body>' +
            `${fileLinks()}` +
            '</body>' +
            '</html>';
    }
    handle(request, response) {
        if (response.finished) {
            return Promise.resolve();
        }
        return new Promise((resolve) => {
            const requestUrl = url_1.parse(request.url);
            const location = path_1.join(this.rootDirectory, requestUrl.pathname);
            if (this.isDirectory(location)) {
                log_1.log.debug(`ServeDirectory: listing contents of "${location}"`);
                fs_1.readdir(location, (err, files) => {
                    if (err) {
                        return;
                    }
                    const url = request.originalUrl ? url_1.parse(request.originalUrl) : requestUrl;
                    response.end(this.createHtml(url.path, files));
                    resolve();
                });
            }
            else {
                log_1.log.debug(`ServeDirectory: "${location}" does not exist.`);
                resolve();
            }
        });
    }
    isDirectory(location) {
        try {
            const stats = fs_1.statSync(location);
            return stats.isDirectory();
        }
        catch (e) {
        }
        return false;
    }
}
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = ServeDirectory;
//# sourceMappingURL=ServeDirectory.js.map